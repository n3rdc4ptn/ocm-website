<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on Open Component Model</title><link>https://ocm.software/docs/tutorials/</link><description>Recent content in Tutorials on Open Component Model</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Â© Copyright 2024, SAP SE and Open Component Model Contributors</copyright><lastBuildDate>Tue, 19 Mar 2024 10:36:48 +0100</lastBuildDate><atom:link href="https://ocm.software/docs/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Best Practices</title><link>https://ocm.software/docs/tutorials/best-practices/</link><pubDate>Mon, 13 Mar 2023 12:00:26 +0100</pubDate><guid>https://ocm.software/docs/tutorials/best-practices/</guid><description>This chapter contains guidelines for common scenarios how to work with the Open Component Model, focusing on using CI/CD, build and publishing processes.</description></item><item><title>Build &amp; Deploy Infrastructure via Helm Charts with OCM</title><link>https://ocm.software/docs/tutorials/build-deploy-infrastructure-via-helm-charts-with-ocm/</link><pubDate>Tue, 19 Mar 2024 10:36:48 +0100</pubDate><guid>https://ocm.software/docs/tutorials/build-deploy-infrastructure-via-helm-charts-with-ocm/</guid><description>Introduction Let&amp;rsquo;s illustrate a very simple &amp;ldquo;Hello World&amp;rdquo; example application and show how to leverage OCM to build an application component containing a Helm Chart and an OCI Image and deploy it to a local kind k8s cluster.</description></item><item><title>Structuring and Deploying Software Products with OCM</title><link>https://ocm.software/docs/tutorials/structuring-and-deploying-software-products-with-ocm/</link><pubDate>Tue, 20 Jun 2023 10:00:00 +0000</pubDate><guid>https://ocm.software/docs/tutorials/structuring-and-deploying-software-products-with-ocm/</guid><description>Introduction In this specification software products are comprised of logical units called components. A component version consists of a set of technical artifacts (e.</description></item><item><title>Input and Access Types</title><link>https://ocm.software/docs/tutorials/input-and-access-types/</link><pubDate>Wed, 05 Apr 2023 08:24:35 +0200</pubDate><guid>https://ocm.software/docs/tutorials/input-and-access-types/</guid><description>Overview Input Types binary dir docker dockermulti file helm ociImage spiff utf-8 Access Types gitHub helm npm ociArtifact s3 Overview The Open Component Model spec supports multiple methods how to add resources to a component version.</description></item></channel></rss>